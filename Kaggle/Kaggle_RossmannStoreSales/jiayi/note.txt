https://www.kaggle.com/c/rossmann-store-sales/data
* combine files: train.csv & store.csv
	-changeStateHoliday from a,b,c,0 to 3 independent 0,1 series
	
	store:
	-expand StoreType to 3 independent 0,1 series: modifyStoreType
	-expand Assortment to [1,2,3] series: modifyAssortment	
	-from CompetitionOpenSinceMonth & CompetitionOpenSinceYear get the CompetitionOpenSince_OrdinalDay : modifyCompOpenSince
	-from Promo2SinceWeek/Year, get Promo2SinceOrdinalDay: modifyPromo2Since	

	train
	-expand CompetitionOpenSince to 0,1 time series: 
	-expand Promo2Since to 0,1 series: 
	-expand PromoInterval to 0,1 series: 
	
	
* fill missing values
* 1st, try: ignore dates, just treat them as lots of different sample data for
 that store, and solve for model. Although, I believe there are some time
dependent patterns. Takeing those patterns into consideration will improve the
overall accuracy. Maybe, we can use day-of-year?? Does that introduce inproper
constraints?
* 2ed: also ignore the store number, it's just a number that links the train.csv and store.csv (i.e., link between sales & store information). 
* we just train the model based on all information other than dates and store id
, the final output is Sales as a function of DayOfWeek+Open+Promo+Holiday+etc.
* normalization (maybe it's build-in inside the program)
* remove redundant features: Open&Holiday? Promo&Promo2+Promo2Since+PromoInterval?
*
Nov 23: 
* applied stepwise feature selection & least square to store 1
* try PCA, regularized regression (lasso and ridge regression)
* try tree regression, random forest(learn)?

Problems:
* Regression, unstable prediction, sometimes, the predicted Sales value goes all the way to +1e11, or <0
